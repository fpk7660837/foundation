package com.generator

import com.generator.contract.OneSupertypeContract
import com.generator.contract.generated.OneSupertypeContractImpl
import kotlin.String
import kotlin.Suppress
import net.ntworld.foundation.Faker
import net.ntworld.foundation.util.JavaFakerWrapper

private val faker: Faker = JavaFakerWrapper(com.github.javafaker.Faker())


@Suppress("UNCHECKED_CAST")
private fun <T> createFakedData(type: String): T = faker.makeFakeData(type) as T

fun OneSupertypeContract.Companion.make(): OneSupertypeContract = OneSupertypeContractImpl(
  zelda = createFakedData("zelda.character"),
  firstName = createFakedData("name.firstName"),
  lastName = createFakedData("name.lastName"),
  email = createFakedData("internet.emailAddress")
)

fun OneSupertypeContract.Companion.make(zelda: String): OneSupertypeContract =
    OneSupertypeContractImpl(
  zelda = zelda,
  firstName = createFakedData("name.firstName"),
  lastName = createFakedData("name.lastName"),
  email = createFakedData("internet.emailAddress")
)

fun OneSupertypeContract.Companion.make(zelda: String, firstName: String): OneSupertypeContract =
    OneSupertypeContractImpl(
  zelda = zelda,
  firstName = firstName,
  lastName = createFakedData("name.lastName"),
  email = createFakedData("internet.emailAddress")
)

fun OneSupertypeContract.Companion.make(
  zelda: String,
  firstName: String,
  lastName: String
): OneSupertypeContract = OneSupertypeContractImpl(
  zelda = zelda,
  firstName = firstName,
  lastName = lastName,
  email = createFakedData("internet.emailAddress")
)
