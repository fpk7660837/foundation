package com.example.contract.generated

import com.example.contract.AllOptionalProperties
import kotlin.String
import kotlin.Suppress
import net.ntworld.foundation.Faker

class AllOptionalPropertiesFactory(
  private val faker: Faker
) {
  fun make(): AllOptionalProperties = AllOptionalPropertiesImpl(
    id = createFakedData("UUID"),
    email = createFakedData("fakedEmail"),
    firstName = createFakedData("fakedFirstName"),
    lastName = createFakedData("fakedLastName")
  )

  fun make(id: String): AllOptionalProperties = AllOptionalPropertiesImpl(
    id = id,
    email = createFakedData("fakedEmail"),
    firstName = createFakedData("fakedFirstName"),
    lastName = createFakedData("fakedLastName")
  )

  fun make(id: String, email: String): AllOptionalProperties = AllOptionalPropertiesImpl(
    id = id,
    email = email,
    firstName = createFakedData("fakedFirstName"),
    lastName = createFakedData("fakedLastName")
  )

  fun make(
    id: String,
    email: String,
    firstName: String
  ): AllOptionalProperties = AllOptionalPropertiesImpl(
    id = id,
    email = email,
    firstName = firstName,
    lastName = createFakedData("fakedLastName")
  )

  fun make(
    id: String,
    email: String,
    firstName: String,
    lastName: String
  ): AllOptionalProperties = AllOptionalPropertiesImpl(
    id = id,
    email = email,
    firstName = firstName,
    lastName = lastName
  )

  @Suppress("UNCHECKED_CAST")
  private fun <T> createFakedData(type: String): T = faker.makeFakeData(type) as T
}
