package net.ntworld.foundation.generator.setting

import kotlinx.serialization.Serializable
import net.ntworld.foundation.generator.type.ClassInfo
import net.ntworld.foundation.generator.type.EventField


// ----------------------------------------------------------------------------------
// Single event settings will generate 3 classes
//   1. {$event}Data: contains data of Event
//   2. {$event}Converter: converts Event to generated {$event}Data
//   3. {$event}DataMessageConverter: converts {$event}Data to Message and vice versa
// ----------------------------------------------------------------------------------
// How to detect and create settings in processor?
//   - determine Event by @EventSourcing
//   - set EventField.metadata = true by @EventSourcing.Metadata
//   - set EventField.encrypted = true + faked by @EventSourcing.Encrypted
// ----------------------------------------------------------------------------------
// Register to AutoGeneratedInfrastructureProvider:
//   - All generated classes will be register to the provider automatically
// ----------------------------------------------------------------------------------

@Serializable
data class EventSettings(
    val event: ClassInfo,
    val fields: List<EventField>,
    val type: String,
    val variant: Int
)